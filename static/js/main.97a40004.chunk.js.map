{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Components/Loader.js","Components/ProductCard.js","Views/Home.js","Views/About.js","Views/Contact.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","Loader","ProductCard","product","id","backgroundImage","images","imageURL","name","price","description","Home","url","loading","data","error","products","setProducts","useEffect","axios","get","then","response","catch","content","About","Contact","Product","useParams","setProduct","src","alt","App","basename","window","location","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.97a40004.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavigationMenu(props) {\n    return (\n        <div>\n            <div className=\"font-bold py-3\">AppName</div>\n            <ul>\n                <li>\n                    <Link\n                        to=\"/\"\n                        className=\"text-blue-500 py-3 border-t border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Home\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/about\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        About\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/contact\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Contact\n                    </Link>\n                    {/* <Link\n                        to=\"/product\"\n                        className=\"text-blue-500 py-3 border-b block\"\n                        onClick={props.closeMenu}\n                    >\n                        Product\n                    </Link> */}\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default NavigationMenu;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// show the 3 little horizontal bars\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { useTransition, animated } from \"react-spring\";\n\nimport NavigationMenu from \"./NavigationMenu\";\n\nfunction Navigation() {\n    // create a variable to showmenu which is a state to determine to show the menu\n    // 2. function setShowMenu will change teh avalue of the above the variable\n    // 3. use setState hook to change the value. Initial value is false\n    const [showMenu, setShowMenu] = useState(false);\n\n    const maskTransitions = useTransition(showMenu, null, {\n        from: { position: \"absolute\", opacity: 0 },\n        enter: { opacity: 1 },\n        leave: { opacity: 0 },\n    });\n\n    const menuTransitions = useTransition(showMenu, null, {\n        from: { opacity: 0, transform: \"translateX(-100%)\" },\n        enter: { opacity: 1, transform: \"translateX(0%)\" },\n        leave: { opacity: 0, transform: \"translateX(-100%)\" },\n    });\n\n    return (\n        <nav>\n            <span className=\"text-xl\">\n                <FontAwesomeIcon\n                    icon={faBars}\n                    onClick={() => setShowMenu(!showMenu)}\n                />\n            </span>\n\n            {/* // empty black background that fades in and out */}\n            {maskTransitions.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div\n                            key={key}\n                            style={props}\n                            className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\n                            onClick={() => setShowMenu(false)}\n                        ></animated.div>\n                    )\n            )}\n\n            {menuTransitions.map(\n                ({ item, key, props }) =>\n                    item && (\n                        <animated.div\n                            key={key}\n                            style={props}\n                            className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\n                        >\n                            {/* pass the setShowMenu function to props to child component NavigationMenu.js */}\n                            <NavigationMenu\n                                closeMenu={() => setShowMenu(false)}\n                            />\n                        </animated.div>\n                    )\n            )}\n        </nav>\n    );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Navigation from \"./Navigation\";\n\nfunction Header() {\n    return (\n        <header className=\"border-b  p-3 flex justify-between items-center\">\n            <span className=\"font-bold\">React - Basic API app</span>\n\n            <Navigation />\n        </header>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\">\n            &copy; Copyright 2020\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Loader() {\n    return (\n        <div className=\"flex justify-center\">\n            <div className=\"loader\"></div>\n        </div>\n    );\n}\n\nexport default Loader;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ProductCard(props) {\n    return (\n        <div className=\"border mb-4 rounded overflow=hidden\">\n            <Link to={`/product/${props.product.id}`}>\n                <div\n                    style={{\n                        backgroundImage: `url('${props.product.images[0].imageURL}`,\n                    }}\n                    className=\"w-full h-64 bg-blue bg-cover\"\n                ></div>\n            </Link>\n            <div className=\"p-3\">\n                <h3 className=\"font-bold text-xl mb-3\">\n                    <Link to={`/product/${props.product.id}`}>\n                        {props.product.name}\n                    </Link>\n                </h3>\n                <div className=\"font-bold mb-3\">$ {props.product.price}</div>\n                <div className=\"mb-3\">{props.product.description}</div>\n                <Link\n                    to={`/product/${props.product.id}`}\n                    className=\"bg-blue-500 text-white p-2 flex justify-center w-full\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductCard;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Loader from \"../Components/Loader\";\nimport ProductCard from \"../Components/ProductCard\";\n\nfunction Home() {\n    //show the first 10 products\n    const url = `https://5ef401f8ac6d1e00168c99e4.mockapi.io/api/v1/Products?page=1&limit=10`;\n\n    // loopiung through an array of products\n    const [products, setProducts] = useState({\n        loading: false,\n        data: null,\n        error: false,\n    });\n\n    // need to catch errors so make it false at the start\n    useEffect(() => {\n        setProducts({\n            loading: true,\n            data: null,\n            error: false,\n        });\n        // return a promise so chain a THEN funtion. This function then can give us back the response from the request, we will then fun a function on that response. On that response, we will set a variable\n\n        axios\n            .get(url)\n            .then((response) => {\n                // set product will be th response.data\n                setProducts({\n                    loading: false,\n                    data: response.data,\n                    error: false,\n                });\n                // console.log(response.data);\n                // debugger;\n            })\n            // simple error catch\n            .catch(() => {\n                setProducts({\n                    loading: true,\n                    data: null,\n                    error: true,\n                });\n            });\n    }, [url]);\n\n    let content = null;\n\n    // if an error on loading on products, jsut show a simple error message\n    if (products.error) {\n        content = <p>There was error. Please try refreshing</p>;\n    }\n    // show the loading image if products are being loaded\n    if (products.loading) {\n        content = <Loader />;\n    }\n\n    // show all the 10 products data if we have it.\n    if (products.data) {\n        // use a map to loop throug an output the products\n        content = products.data.map((product, key) => (\n            <div key={key}>\n                <ProductCard product={product} />\n            </div>\n        ));\n    }\n\n    return (\n        <div>\n            <h1 className=\"font-bold text-2xl\">Best Sellers</h1>\n            {content}\n        </div>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About() {\n    return (\n        <div>\n            <h1 className=\"font-bold text-2xl mb-3\">About us</h1>\n\n            <p>This is the about page content</p>\n        </div>\n    );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Contact() {\n    return (\n        <div>\n            <h1 className=\"font-bold text-2xl mb-3\">Contact us</h1>\n\n            <p>This is the contact us page content</p>\n        </div>\n    );\n}\n\nexport default Contact;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"../Components/Loader\";\n\n// ?pages=1&limit=10\n\nfunction Product() {\n    // destructure id from the UseParams() hook\n    const { id } = useParams();\n    const url = `https://5ef401f8ac6d1e00168c99e4.mockapi.io/api/v1/Products/${id}`;\n\n    const [product, setProduct] = useState({\n        loading: false,\n        data: null,\n        error: false,\n    });\n\n    let content = null;\n\n    // need to catch errors so make it false at the start\n    useEffect(() => {\n        setProduct({\n            loading: true,\n            data: null,\n            error: false,\n        });\n        // return a promise so chain a THEN funtion. This function then can give us back the response from the request, we will then fun a function on that response. On that response, we will set a variable\n\n        axios\n            .get(url)\n            .then((response) => {\n                // set product will be th response.data\n                setProduct({\n                    loading: false,\n                    data: response.data,\n                    error: false,\n                });\n                // console.log(response.data);\n                // debugger;\n            })\n            // simple error catch\n            .catch(() => {\n                setProduct({\n                    loading: true,\n                    data: null,\n                    error: true,\n                });\n            });\n    }, [url]);\n\n    // if an error on loading, jsut show a simple error message\n    if (product.error) {\n        content = <p>There was error. Please try refreshing</p>;\n    }\n    // show the loading image if products are being loaded\n    if (product.loading) {\n        content = <Loader />;\n    }\n\n    // show the informatoin if we have it.\n    if (product.data) {\n        content = (\n            <div>\n                <h1 className=\"text-2xl font-bold mb-3\">{product.data.name}</h1>\n\n                <div>\n                    <img\n                        src={product.data.images[0].imageURL}\n                        alt={product.data.name}\n                    />\n                </div>\n                <div className=\"font-bold text-xl mb-3\">\n                    $ {product.data.price}\n                </div>\n                <div>{product.data.description}</div>\n            </div>\n        );\n    }\n    return <div>{content}</div>;\n}\n\nexport default Product;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport Home from \"./Views/Home\";\nimport About from \"./Views/About\";\nimport Contact from \"./Views/Contact\";\nimport Product from \"./Views/Product\";\n\nfunction App() {\n    return (\n        <div className=\"relative pb-10 min-h-screen\">\n            <Router basename={window.location.pathname || \"\"}>\n                {/* <CounterExample /> */}\n                <Header />\n                <div className=\"p-3\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Home}>\n                            <Home />\n                        </Route>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"/contact\">\n                            <Contact />\n                        </Route>\n                        <Route path=\"/product/:id\">\n                            <Product />\n                        </Route>\n                    </Switch>\n                </div>\n                <Footer />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./tailwind.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}